<%= h2 "Rescue" %>

While you can write your own `begin/rescue/end` mechanics using [`Wrap`](#wrap), Trailblazer offers you the `Rescue` macro to catch and handle exceptions that might occur while running the pipe.

<%= code "rescue", collapse: "methods" %>

Any exception raised during a step in the `Rescue` block will stop the nested pipe from being executed, and continue after the block on the left track.

You can specify what exceptions to catch and an optional handler that is called when an exception is encountered.

<%= code "rescue-handler", collapse: "methods" %>

Alternatively, you can use a  `Callable` object for `:handler`.

<%= h3 "Full example" %>

The  `Nested`, `Wrap` and `Rescue` macros can also be nested, allowing an easily extendable business workflow with error handling along the way.

TODO: add example
